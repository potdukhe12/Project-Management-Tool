{"ast":null,"code":"var _jsxFileName = \"F:\\\\application code\\\\Technoedu intern project\\\\BharatIntern-main\\\\ppmtool-react-client\\\\src\\\\components\\\\ProjectBoard\\\\ProjectBoard.js\";\nimport React, { Component } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport Backlog from \"./Backlog\";\nimport { connect } from \"react-redux\";\nimport PropTypes from \"prop-types\";\nimport { getBacklog } from \"../../actions/backlogActions\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nclass ProjectBoard extends Component {\n  //constructor to handle errors\n  constructor() {\n    super();\n    this.state = {\n      errors: {}\n    };\n  }\n  componentDidMount() {\n    const {\n      id\n    } = this.props.match.params;\n    this.props.getBacklog(id);\n  }\n  componentWillReceiveProps(nextProps) {\n    if (nextProps.errors) {\n      this.setState({\n        errors: nextProps.errors\n      });\n    }\n  }\n  render() {\n    const {\n      id\n    } = this.props.match.params;\n    const {\n      project_tasks\n    } = this.props.backlog;\n    const {\n      errors\n    } = this.state;\n    let BoardContent;\n    const boardAlgorithm = (errors, project_tasks) => {\n      if (project_tasks.length < 1) {\n        if (errors.projectNotFound) {\n          return /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"alert alert-danger text-center\",\n            role: \"alert\",\n            children: errors.projectNotFound\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 39,\n            columnNumber: 13\n          }, this);\n        } else if (errors.projectIdentifier) {\n          return /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"alert alert-danger text-center\",\n            role: \"alert\",\n            children: errors.projectIdentifier\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 45,\n            columnNumber: 13\n          }, this);\n        } else {\n          return /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"alert alert-info text-center\",\n            role: \"alert\",\n            children: \"No Project Tasks on this board\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 51,\n            columnNumber: 13\n          }, this);\n        }\n      } else {\n        return /*#__PURE__*/_jsxDEV(Backlog, {\n          project_tasks_prop: project_tasks\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 16\n        }, this);\n      }\n    };\n    BoardContent = boardAlgorithm(errors, project_tasks);\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container\",\n      children: [/*#__PURE__*/_jsxDEV(Link, {\n        to: `/addProjectTask/${id}`,\n        className: \"btn btn-primary mb-3\",\n        children: /*#__PURE__*/_jsxDEV(\"i\", {\n          className: \"fas fa-plus-circle\",\n          children: \" Create Project Task\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 9\n      }, this), BoardContent]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 7\n    }, this);\n  }\n}\nProjectBoard.propTypes = {\n  backlog: PropTypes.object.isRequired,\n  getBacklog: PropTypes.func.isRequired,\n  errors: PropTypes.object.isRequired\n};\nconst mapStateToProps = state => ({\n  backlog: state.backlog,\n  errors: state.errors\n});\nexport default connect(mapStateToProps, {\n  getBacklog\n})(ProjectBoard);","map":{"version":3,"names":["React","Component","Link","Backlog","connect","PropTypes","getBacklog","jsxDEV","_jsxDEV","ProjectBoard","constructor","state","errors","componentDidMount","id","props","match","params","componentWillReceiveProps","nextProps","setState","render","project_tasks","backlog","BoardContent","boardAlgorithm","length","projectNotFound","className","role","children","fileName","_jsxFileName","lineNumber","columnNumber","projectIdentifier","project_tasks_prop","to","propTypes","object","isRequired","func","mapStateToProps"],"sources":["F:/application code/Technoedu intern project/BharatIntern-main/ppmtool-react-client/src/components/ProjectBoard/ProjectBoard.js"],"sourcesContent":["import React, { Component } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport Backlog from \"./Backlog\";\nimport { connect } from \"react-redux\";\nimport PropTypes from \"prop-types\";\nimport { getBacklog } from \"../../actions/backlogActions\";\n\nclass ProjectBoard extends Component {\n  //constructor to handle errors\n  constructor() {\n    super();\n    this.state = {\n      errors: {}\n    };\n  }\n\n  componentDidMount() {\n    const { id } = this.props.match.params;\n    this.props.getBacklog(id);\n  }\n\n  componentWillReceiveProps(nextProps) {\n    if (nextProps.errors) {\n      this.setState({ errors: nextProps.errors });\n    }\n  }\n\n  render() {\n    const { id } = this.props.match.params;\n    const { project_tasks } = this.props.backlog;\n    const { errors } = this.state;\n\n    let BoardContent;\n\n    const boardAlgorithm = (errors, project_tasks) => {\n      if (project_tasks.length < 1) {\n        if (errors.projectNotFound) {\n          return (\n            <div className=\"alert alert-danger text-center\" role=\"alert\">\n              {errors.projectNotFound}\n            </div>\n          );\n        }else if (errors.projectIdentifier) {\n          return (\n            <div className=\"alert alert-danger text-center\" role=\"alert\">\n              {errors.projectIdentifier}\n            </div>\n          );\n          }  else {\n          return (\n            <div className=\"alert alert-info text-center\" role=\"alert\">\n              No Project Tasks on this board\n            </div>\n          );\n        }\n      } else {\n        return <Backlog project_tasks_prop={project_tasks} />;\n      }\n    };\n\n    BoardContent = boardAlgorithm(errors, project_tasks);\n\n    return (\n      <div className=\"container\">\n        <Link to={`/addProjectTask/${id}`} className=\"btn btn-primary mb-3\">\n          <i className=\"fas fa-plus-circle\"> Create Project Task</i>\n        </Link>\n        <br />\n        <hr />\n        {BoardContent}\n      </div>\n    );\n  }\n}\n\nProjectBoard.propTypes = {\n  backlog: PropTypes.object.isRequired,\n  getBacklog: PropTypes.func.isRequired,\n  errors: PropTypes.object.isRequired\n};\n\nconst mapStateToProps = state => ({\n  backlog: state.backlog,\n  errors: state.errors\n});\n\nexport default connect(\n  mapStateToProps,\n  { getBacklog }\n)(ProjectBoard);\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}