{"ast":null,"code":"import axios from \"axios\";\nimport { GET_ERRORS, GET_BACKLOG, GET_PROJECT_TASK, DELETE_PROJECT_TASK } from \"./types\";\n\n//Fix bug with priority in Spring Boot Server, needs to check null first\nexport const addProjectTask = (backlog_id, project_task, history) => async dispatch => {\n  try {\n    await axios.post(`/api/backlog/${backlog_id}`, project_task);\n    history.push(`/projectBoard/${backlog_id}`);\n    dispatch({\n      type: GET_ERRORS,\n      payload: {}\n    });\n  } catch (err) {\n    dispatch({\n      type: GET_ERRORS,\n      payload: err.response.data\n    });\n  }\n};\nexport const getBacklog = backlog_id => async dispatch => {\n  try {\n    const res = await axios.get(`/api/backlog/${backlog_id}`);\n    dispatch({\n      type: GET_BACKLOG,\n      payload: res.data\n    });\n  } catch (err) {\n    dispatch({\n      type: GET_ERRORS,\n      payload: err.response.data\n    });\n  }\n};\nexport const getProjectTask = (backlog_id, pt_id, history) => async dispatch => {\n  try {\n    const res = await axios.get(`/api/backlog/${backlog_id}/${pt_id}`);\n    dispatch({\n      type: GET_PROJECT_TASK,\n      payload: res.data\n    });\n  } catch (err) {\n    history.push(\"/dashboard\");\n  }\n};\nexport const updateProjectTask = (backlog_id, pt_id, project_task, history) => async dispatch => {\n  try {\n    await axios.patch(`/api/backlog/${backlog_id}/${pt_id}`, project_task);\n    history.push(`/projectBoard/${backlog_id}`);\n    dispatch({\n      type: GET_ERRORS,\n      payload: {}\n    });\n  } catch (err) {\n    dispatch({\n      type: GET_ERRORS,\n      payload: err.response.data\n    });\n  }\n};\nexport const deleteProjectTask = (backlog_id, pt_id) => async dispatch => {\n  if (window.confirm(`You are deleting project task ${pt_id}, this action cannot be undone`)) {\n    await axios.delete(`/api/backlog/${backlog_id}/${pt_id}`);\n    dispatch({\n      type: DELETE_PROJECT_TASK,\n      payload: pt_id\n    });\n  }\n};","map":{"version":3,"names":["axios","GET_ERRORS","GET_BACKLOG","GET_PROJECT_TASK","DELETE_PROJECT_TASK","addProjectTask","backlog_id","project_task","history","dispatch","post","push","type","payload","err","response","data","getBacklog","res","get","getProjectTask","pt_id","updateProjectTask","patch","deleteProjectTask","window","confirm","delete"],"sources":["C:/Users/potdu/Downloads/Bharat Intern/Project-Management-Tool/Project-Management-Tool-master/pmtool-react-client/src/actions/backlogActions.js"],"sourcesContent":["import axios from \"axios\";\nimport {\n  GET_ERRORS,\n  GET_BACKLOG,\n  GET_PROJECT_TASK,\n  DELETE_PROJECT_TASK\n} from \"./types\";\n\n//Fix bug with priority in Spring Boot Server, needs to check null first\nexport const addProjectTask = (\n  backlog_id,\n  project_task,\n  history\n) => async dispatch => {\n  try {\n    await axios.post(`/api/backlog/${backlog_id}`, project_task);\n    history.push(`/projectBoard/${backlog_id}`);\n    dispatch({\n      type: GET_ERRORS,\n      payload: {}\n    });\n  } catch (err) {\n    dispatch({\n      type: GET_ERRORS,\n      payload: err.response.data\n    });\n  }\n};\n\nexport const getBacklog = backlog_id => async dispatch => {\n  try {\n    const res = await axios.get(`/api/backlog/${backlog_id}`);\n    dispatch({\n      type: GET_BACKLOG,\n      payload: res.data\n    });\n  } catch (err) {\n    dispatch({\n      type: GET_ERRORS,\n      payload: err.response.data\n    });\n  }\n};\n\nexport const getProjectTask = (\n  backlog_id,\n  pt_id,\n  history\n) => async dispatch => {\n  try {\n    const res = await axios.get(`/api/backlog/${backlog_id}/${pt_id}`);\n    dispatch({\n      type: GET_PROJECT_TASK,\n      payload: res.data\n    });\n  } catch (err) {\n    history.push(\"/dashboard\");\n  }\n};\n\nexport const updateProjectTask = (\n  backlog_id,\n  pt_id,\n  project_task,\n  history\n) => async dispatch => {\n  try {\n    await axios.patch(`/api/backlog/${backlog_id}/${pt_id}`, project_task);\n    history.push(`/projectBoard/${backlog_id}`);\n    dispatch({\n      type: GET_ERRORS,\n      payload: {}\n    });\n  } catch (err) {\n    dispatch({\n      type: GET_ERRORS,\n      payload: err.response.data\n    });\n  }\n};\n\nexport const deleteProjectTask = (backlog_id, pt_id) => async dispatch => {\n  if (\n    window.confirm(\n      `You are deleting project task ${pt_id}, this action cannot be undone`\n    )\n  ) {\n    await axios.delete(`/api/backlog/${backlog_id}/${pt_id}`);\n    dispatch({\n      type: DELETE_PROJECT_TASK,\n      payload: pt_id\n    });\n  }\n};\n"],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SACEC,UAAU,EACVC,WAAW,EACXC,gBAAgB,EAChBC,mBAAmB,QACd,SAAS;;AAEhB;AACA,OAAO,MAAMC,cAAc,GAAGA,CAC5BC,UAAU,EACVC,YAAY,EACZC,OAAO,KACJ,MAAMC,QAAQ,IAAI;EACrB,IAAI;IACF,MAAMT,KAAK,CAACU,IAAI,CAAE,gBAAeJ,UAAW,EAAC,EAAEC,YAAY,CAAC;IAC5DC,OAAO,CAACG,IAAI,CAAE,iBAAgBL,UAAW,EAAC,CAAC;IAC3CG,QAAQ,CAAC;MACPG,IAAI,EAAEX,UAAU;MAChBY,OAAO,EAAE,CAAC;IACZ,CAAC,CAAC;EACJ,CAAC,CAAC,OAAOC,GAAG,EAAE;IACZL,QAAQ,CAAC;MACPG,IAAI,EAAEX,UAAU;MAChBY,OAAO,EAAEC,GAAG,CAACC,QAAQ,CAACC;IACxB,CAAC,CAAC;EACJ;AACF,CAAC;AAED,OAAO,MAAMC,UAAU,GAAGX,UAAU,IAAI,MAAMG,QAAQ,IAAI;EACxD,IAAI;IACF,MAAMS,GAAG,GAAG,MAAMlB,KAAK,CAACmB,GAAG,CAAE,gBAAeb,UAAW,EAAC,CAAC;IACzDG,QAAQ,CAAC;MACPG,IAAI,EAAEV,WAAW;MACjBW,OAAO,EAAEK,GAAG,CAACF;IACf,CAAC,CAAC;EACJ,CAAC,CAAC,OAAOF,GAAG,EAAE;IACZL,QAAQ,CAAC;MACPG,IAAI,EAAEX,UAAU;MAChBY,OAAO,EAAEC,GAAG,CAACC,QAAQ,CAACC;IACxB,CAAC,CAAC;EACJ;AACF,CAAC;AAED,OAAO,MAAMI,cAAc,GAAGA,CAC5Bd,UAAU,EACVe,KAAK,EACLb,OAAO,KACJ,MAAMC,QAAQ,IAAI;EACrB,IAAI;IACF,MAAMS,GAAG,GAAG,MAAMlB,KAAK,CAACmB,GAAG,CAAE,gBAAeb,UAAW,IAAGe,KAAM,EAAC,CAAC;IAClEZ,QAAQ,CAAC;MACPG,IAAI,EAAET,gBAAgB;MACtBU,OAAO,EAAEK,GAAG,CAACF;IACf,CAAC,CAAC;EACJ,CAAC,CAAC,OAAOF,GAAG,EAAE;IACZN,OAAO,CAACG,IAAI,CAAC,YAAY,CAAC;EAC5B;AACF,CAAC;AAED,OAAO,MAAMW,iBAAiB,GAAGA,CAC/BhB,UAAU,EACVe,KAAK,EACLd,YAAY,EACZC,OAAO,KACJ,MAAMC,QAAQ,IAAI;EACrB,IAAI;IACF,MAAMT,KAAK,CAACuB,KAAK,CAAE,gBAAejB,UAAW,IAAGe,KAAM,EAAC,EAAEd,YAAY,CAAC;IACtEC,OAAO,CAACG,IAAI,CAAE,iBAAgBL,UAAW,EAAC,CAAC;IAC3CG,QAAQ,CAAC;MACPG,IAAI,EAAEX,UAAU;MAChBY,OAAO,EAAE,CAAC;IACZ,CAAC,CAAC;EACJ,CAAC,CAAC,OAAOC,GAAG,EAAE;IACZL,QAAQ,CAAC;MACPG,IAAI,EAAEX,UAAU;MAChBY,OAAO,EAAEC,GAAG,CAACC,QAAQ,CAACC;IACxB,CAAC,CAAC;EACJ;AACF,CAAC;AAED,OAAO,MAAMQ,iBAAiB,GAAGA,CAAClB,UAAU,EAAEe,KAAK,KAAK,MAAMZ,QAAQ,IAAI;EACxE,IACEgB,MAAM,CAACC,OAAO,CACX,iCAAgCL,KAAM,gCACzC,CAAC,EACD;IACA,MAAMrB,KAAK,CAAC2B,MAAM,CAAE,gBAAerB,UAAW,IAAGe,KAAM,EAAC,CAAC;IACzDZ,QAAQ,CAAC;MACPG,IAAI,EAAER,mBAAmB;MACzBS,OAAO,EAAEQ;IACX,CAAC,CAAC;EACJ;AACF,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}